<script setup>
/*
<%= File.read(Pathname.new(LESLI_ROOT).join("lesli.txt")).to_s.force_encoding("ASCII-8BIT") %>*/


// · import vue tools
import { ref, onMounted, watch, computed, inject } from "vue"
import { useRouter, useRoute } from "vue-router"


// · import stores
import { use<%= @info[:resources] %> } from "Cloud<%= @info[:engine_name].capitalize %>/stores/<%= @info[:resources_camel] %>.js"


// · initialize/inject plugins
const router = useRouter()
const route = useRoute()
const msg = inject("msg")
const url = inject("url")


// · implement stores
const store<%= @info[:resources] %> = use<%= @info[:resources] %>()


// · import components
import componentForm from "./components/form.vue"


// · translations
const translations = {
    core: {
        shared: I18n.t("core.shared")
    }
}


// · initializing
onMounted(() => {
    store<%= @info[:resources] %>.fetch<%= @info[:resources] %>(route.params.id)
})

</script>
<template>
    <application-component>
        <lesli-header title="New <%= @info[:resource].downcase %>">
            <lesli-button icon="list" :to="url.<%= @info[:engine_name] %>('<%= @info[:resources_code] %>')">
                {{ translations.core.shared.view_text_btn_all }}
            </lesli-button>
            <lesli-button
                icon="refresh"
                :loading="store<%= @info[:resources] %>.index.loading"
                @click="store<%= @info[:resources] %>.get<%= @info[:resources] %>()">
                {{ translations.core.shared.view_text_btn_reload }}
            </lesli-button>
        </lesli-header>

        <lesli-toolbar :search-placeholder="translations.core.shared.view_text_placeholder_search" @search="store<%= @info[:resources] %>.search">
        </lesli-toolbar>

        <component-form :editable="true"></component-form>

    </application-component>
</template>
