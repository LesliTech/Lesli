=begin

[[license]]
=end

require "lesli_request_helper"

RSpec.describe "Tests for Lesli3", type: :request, :unless => defined?(DeutscheLeibrenten) do
    describe "POST:[[url]].json", type: :request do
        include_context "request user authentication"

        # test cases
        #one or more test could fail when first run them, verify the routes, controller locations and names
        #

        it "is expected to test the creation of the record with values" do

            #search posibles permit values to create an element
            params = [[controller_folder_upper]]::[[controller_file_upper]].column_names
            params_hash_value = {}

            #cast column_names (its an Array) into a hash an insert values
            params.each do |value|
                if !((value.include? "id") || (value.include? "at") )
                    params_hash_value[value] = Faker::Name.name
                end
            end
            

            post("[[url]].json", params: {
                #permit name hash should have format "controller"_"module"
                [[hash_permit]]: params_hash_value
            })

            #shared examples
            expect_response_with_successful

            # validate others custom values expected here

            expect(response_body).to be_a(Hash)

            params_hash_value.each do |key, value|
                expect(response_body).to have_key(key)
            end

        end

        it "is expected to test the creation of the record with empty values" do

            #search posibles permit values to create an element
            params = [[controller_folder_upper]]::[[controller_file_upper]].column_names
            params_hash_empty = {}
            
            #search posibles permit values to create an element
            params.each do |value|
                #assing empty values to test parameters
                params_hash_empty[value] =  ""
            end

            post("[[url]].json", params: {
                [[hash_permit]]: params_hash_empty
                #permit hash should have format "controller"_"module"
            })

            #shared examples
            #should respond with error when parameters are empty
            expect_response_with_error

            # validate others custom values expected here
            expect(response_body).to be_a(Hash)

            expect(response_body).to have_key("message")
            expect(response_body["message"]).to be_a(String)
            
            expect(response_body).to have_key("details")
            expect(response_body["details"]).to be_a(Array)

        end

        it "is expected to test the creation of the record with empty values" do

            #search posibles permit values to create an element
            params = [[controller_folder_upper]]::[[controller_file_upper]].column_names
            params_hash_nil = {}

            #search posibles permit values to create an element
            params.each do |value|
                #assing nil values to test parameters
                params_hash_nil[value] =  nil
            end

            post("[[url]].json", params: {
                [[hash_permit]]: params_hash_nil
                #permit hash should have format "controller"_"module"
            })

            # shared examples
            # should respond with error when parameters are nil or undefine
            expect_response_with_error

            # validate others custom values expected here
            expect(response_body).to be_a(Hash)

            expect(response_body).to have_key("message")
            expect(response_body["message"]).to be_a(String)
            
            expect(response_body).to have_key("details")
            expect(response_body["details"]).to be_a(Array)

        end
    end
end
