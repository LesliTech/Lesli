=begin

[[license]]
=end


require "lesli_request_helper"
require "spec_helper"
require "byebug"


RSpec.describe "POST:[[url]].json", type: :request do
    include_context "request user authentication"

    # helper methods


    # test cases

    it "is expected to test the creation of the record" do
        @[[controller]]_params = {}

        post("[[url]].json", params: {
            [[controller]]: @[[controller]]_params
        })

        # shared examples
        expect_json_response_successful

        # custom expects
        expect(response_data["id"]).to be > 0
        @[[controller]]_params.each do |key, value|
            expect(response_data[key.to_s]).to eq(value)
        end
    end

    it "is expected respond with error when params are invalid" do
        @[[controller]]_invalid_params = {}

        post("[[url]].json", params: {
            [[controller]]: @[[controller]]_invalid_params
        })

        # shared examples
        expect_json_response_error
    end

    it "is expected to redirect to login when no user is authenticated" do
        login = "/login?r=[[url]].json"
        
        # we ensure that no one user is authenticated
        sign_out @current_user

        post("[[url]].json", params: {
            [[controller]]: {}
        })

        # custom expects
        expect(response).to redirect_to(login)
    end

end
