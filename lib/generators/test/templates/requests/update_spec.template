=begin

[[license]]
=end


require "lesli_request_helper"

RSpec.describe "Tests for Lesli3", type: :request, :unless => defined?(DeutscheLeibrenten) do
    describe "PUT:[[url]]/:id.json", type: :request do
        include_context "request user authentication"

        # helper methods


        #def create_record(record_params)
            #define a method to create and object and be sure the table will not be empty of data
        #end

        # test cases

        it "is expected to update record" do
            #@[[controller]] = create_record({})
            #before run test, you must create an object of the class youll like to test

            params = [[controller_folder_upper]]::[[controller_file_upper]].column_names
            params_hash_value = {}
            params.each do |value|
                params_hash_value[value] =   Faker::Name.name
            end

            put("[[url]]/#{@[[controller]].id}.json", params: {
                #[[controller]]: params_hash_value
            })

            # shared examples
            expect_response_with_successful

            # custom examples
            #@[[controller]]_params.each do |key, value|
            #   expect(response_data[key.to_s]).to eq(value)
            #end
        end

        it "is expectd to respond with not found when an invalid ID is sent" do
            #@invalid_id = create_record({}).id + 1
            #before run test, you must create an object of the class youll like to test

            put("[[url]]/#{@invalid_id}.json", params: {
                #[[controller]]: @[[controller]]_params
            })

            # shared examples
            expect_response_with_not_found
        end

        it "is expected to update record when value is empty" do
            #@[[controller]] = create_record({})
            #before run test, you must create an object of the class youll like to test

            params = [[controller_folder_upper]]::[[controller_file_upper]].column_names
            params_hash_empty = {}
            params.each do |value|
                params_hash_empty[value] =   ""
            end

            put("[[url]]/#{@[[controller]].id}.json", params: {
                #[[controller]]: params_hash_empty
            })

            # shared examples
            expect_response_with_successful

            # custom examples
            #@[[controller]]_params.each do |key, value|
            #   expect(response_data[key.to_s]).to eq(value)
            #end
        end

        it "is expected to update record when value is nil or undefine" do
            #@[[controller]] = create_record({})
            #before run test, you must create an object of the class youll like to test

            params = [[controller_folder_upper]]::[[controller_file_upper]].column_names
            params_hash_nil = {}
            params.each do |value|
                params_hash_nil[value] =   ""
            end

            put("[[url]]/#{@[[controller]].id}.json", params: {
                #[[controller]]: params_hash_nil
            })

            # shared examples
            expect_response_with_error
        end
    end
end

