# Lesli
# 
# Copyright (c) 2023, Lesli Technologies, S. A.
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see http://www.gnu.org/licenses/.
# 
# Lesli · Ruby on Rails SaaS development platform.
# 
# Made with ♥ by https://www.lesli.tech
# Building a better future, one line of code at a time.
# 
# @contact  hello@lesli.tech
# @website  https://www.lesli.tech
# @license  GPLv3 http://www.gnu.org/licenses/gpl-3.0.en.html
# 
# // · ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~
# // · 



# -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-
# PLEASE DO NOT MODIFY THIS FILE ON THE CORE,
# THIS FILE SHOULD BE MODIFIED ON THE leitfaden/github_actions REPOSITORY
# -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-



# Specs for Lesli Core
# -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-
name: "Lesli new core version"
on:
  push:
    branches: [ "production" ]

jobs:
  version:
    name: Build new Lesli Core version
    runs-on: ubuntu-latest

    # Do not execute the test if requests comes from another action
    if: "!contains(github.event.head_commit.message, 'release(gem):') && !contains(github.event.head_commit.message, 'assets(js):') && !contains(github.event.head_commit.message, 'ci(workflows):')"

    steps:

      # Send a message to slack announcing the workflow start
      - name: Notify slack github actions start
        uses: LesliTech/github-action-slack-job-status@v1
        with:
          job-status: INFO
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: alerts


      # Clone the current repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          token: ${{ secrets.PUBLISH_GEM_BY_ACTIONS }}


      # Clone our custom actions
      - name: Checkout github actions repo
        uses: actions/checkout@v3
        with:
          ref: master
          repository: leitfaden/github_actions
          token: ${{ secrets.PUBLISH_GEM_BY_ACTIONS }}
          path: ./tmp/.github/


      # Install node dependencies
      - name: NPM install
        run: npm install


      # Compile vue3 app
      - name: Compile Js vue3 for Production
        run: npm run webpack3:production


      # Commit the javascript apps so the gem includes the compiled version
      - name: Commit compiled javascript app
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "assets(js): Compile Js to Production"
          branch: production
        env:
          TOKEN: ${{ secrets.PUBLISH_GEM_BY_ACTIONS }}


      # Build a new version for the core
      - name: Bump version and push tag
        uses: ./tmp/.github/actions/github-action-rails-new-version
        id: bumpVersion
        env:
          RELEASE_BRANCHES: production
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: true


      # Synchronize the production & master branches so we keep the version files
      - name: Sync master branch with production branch
        uses: ./tmp/.github/actions/github-action-sync-branches
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          from_branch: production
          to_branch: master


      # The newly created tag is deleted if a step fails or the workflow is cancelled.
      - name: Delete Tag
        if: "cancelled() || failure()"
        run: git push --delete origin ${{ steps.bumpVersion.outputs.new_tag }}


      # Send a message to slack with the status of the workflow
      - name: Notify by slack
        if: always()
        uses: LesliTech/github-action-slack-job-status@v1
        with:
          job-status: ${{ job.status }}
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: alerts

