# Lesli
#
# Copyright (c) 2023, Lesli Technologies, S. A.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see http://www.gnu.org/licenses/.
#
# Lesli · Ruby on Rails SaaS Development Framework.
#
# Made with ♥ by https://www.lesli.tech
# Building a better future, one line of code at a time.
#
# @contact  hello@lesli.tech
# @website  https://www.lesli.dev
# @license  GPLv3 http://www.gnu.org/licenses/gpl-3.0.en.html
# // · ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~
# // · 



# -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-
# PLEASE DO NOT MODIFY THIS FILE ON THE CORE,
# THIS FILE SHOULD BE MODIFIED ON THE LesliTech/LesliActions REPOSITORY
# -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-



# Specs for Lesli Core
# -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-
name: "Lesli specs workflow"
on:

  # Execute this workflow when trying to merge from dev branch to master
  pull_request:
    branches: [master, production]

  # Execute this workflow when push to master
  push:
    branches: [master]

  # run a test daily at 1 am (Guatemala time)
  #schedule:
  #  - cron: "0 1 * * *"

  # Allow to execute this test manually from the GitHub web app
  workflow_dispatch:

jobs:
  postgres-test:
    name: Test workflow for Lesli Core (PostgreSQL)
    runs-on: ubuntu-latest

    # Do not execute the test if requests comes from another action
    if: ${{ !contains(github.event.head_commit.message, 'ci(workflows):') && !contains(github.event.head_commit.message, 'release(gem):') && !contains(github.event.head_commit.message, 'assets(js):') }}

    # Start database service necessary to execute the RSpec tests
    services:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_DB: "lesli-test"
          POSTGRES_USER: "lesli-test"
          POSTGRES_PASSWORD: "lesli-test"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:

      # Clone LesliBuilder repository
      - name: Checkout LesliBuilder repository
        uses: actions/checkout@v3
        with:
          repository: LesliTech/LesliBuilder

      # Clone Lesli repository
      - name: Checkout Lesli repository
        uses: actions/checkout@v3
        with:
          path: ./engines/Lesli
          repository: LesliTech/Lesli

      # Build the Lesli database
      - name: Copy configuration files
        run: |
          cp ./engines/Lesli/.github/rails/database_postgresql.yml ./config/database.yml
          rm ./Gemfile.lock

      # Use the official receipt to install ruby in ubuntu
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.5
          bundler-cache: true

      # Build the Lesli database
      - name: Set up PostgreSQL database 
        run: RAILS_ENV=test bundle exec rake lesli:db:reset
        env:
          RAILS_ENV: test

      # Run Rspec tests
      - name: Run Rails tests
        run: bundle exec rspec spec
        env:
          CODECOV: true

      # Upload coverage report to codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./coverage/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: LesliTech/lesli-vue
          verbose: true

  sqlite-test:
    name: Test workflow for Lesli Core (SQLite)
    runs-on: ubuntu-latest

    # This job depends on the postgres-test job
    needs: postgres-test

    steps:
      - name: Checkout LesliBuilder repository
        uses: actions/checkout@v3
        with:
          repository: LesliTech/LesliBuilder

      - name: Checkout Lesli repository
        uses: actions/checkout@v3
        with:
          path: ./engines/Lesli
          repository: LesliTech/Lesli

      - name: Copy SQLite configuration files
        run: |
          cp ./engines/Lesli/.github/rails/database_sqlite.yml ./config/database.yml
          rm ./Gemfile.lock

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.5
          bundler-cache: true

      - name: Set up SQLite database
        run: RAILS_ENV=test bundle exec rake lesli:db:reset
        env:
          RAILS_ENV: test

      - name: Run Rails tests with SQLite
        run: bundle exec rspec spec
        env:
          CODECOV: true
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./coverage/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: LesliTech/lesli-vue
          verbose: true
