# Copyright (c) 2022, all rights reserved.
# 
# All the information provided by this platform is protected by international laws related  to 
# industrial property, intellectual property, copyright and relative international laws. 
# All intellectual or industrial property rights of the code, texts, trade mark, design, 
# pictures and any other information belongs to the owner of this platform.
# 
# Without the written permission of the owner, any replication, modification,
# transmission, publication is strictly forbidden.
# 
# For more information read the license file including with this software.


# Specs for Lesli Core
# -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-   -·-
name: "Lesli specs workflow"
on:

  # execute this workflow only when trying to merge from dev branch to master 
  pull_request:
    branches: [master, production]

  # run a test daily at 1 am (Guatemala time)
  schedule:
    - cron: '0 1 * * *'

  # Allow to execute this test manually from the Github web app
  workflow_dispatch:

jobs:
  test:
    name: Test workflow for Lesli Core
    runs-on: lomax

    # Do not execute the test if requests comes from another action
    if: "!contains(github.event.head_commit.message, 'release(gem):') && !contains(github.event.head_commit.message, 'assets(js):') && !contains(github.event.head_commit.message, 'ci(workflows):')"

    # Start database service necessary to execute the RSpec tests
    services:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_USER: leslicloud_test
          POSTGRES_DB: leslicloud_test
          POSTGRES_PASSWORD: "leslicloud_test"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:


      # Set the right owner for work folders
      - name: Set folder righ permissions
        run: "sudo chown -R $USER:$USER $GITHUB_WORKSPACE/"


      # Send a message to slack announcing the workflow start
      - name: Notify slack github actions start 
        uses: LesliTech/github-action-slack-job-status@v1
        with:
          channel: alerts
          job-status: INFO
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          msg: "Github actions start [ ${{ github.event.pull_request.head.ref }} -> ${{ github.event.pull_request.base.ref }} ]"


      # Clone the current repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PUBLISH_GEM_BY_ACTIONS }}


      # Use the official receipt to install ruby in ubuntu
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          bundler-cache: true
        env:
          ImageOS: ubuntu20


      # Build the Lesli database
      - name: Set up database schema
        run: |
          cp ./config/credentials/testci.yml.enc ./config/credentials/test.yml.enc
          bundle list
          bundle exec rake db:drop
          bundle exec rake db:create
          bundle exec rake db:migrate
          bundle exec rake db:setup
        env:
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.CORE_RAILS_MASTER_KEY_TEST }}


      # Run Rspec tests
      - name: Run Spec tests
        run: bundle exec rspec spec
        env:
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.CORE_RAILS_MASTER_KEY_TEST }}


      # Install node dependencies needed for vue tests
      - name: NPM install
        run: npm install


      # Run Vue tests
      - name: Run Vue tests
        run: npm run test:vue


      # Send a message to slack with the status of the workflow
      - name: Notify by slack
        if: always()
        uses: LesliTech/github-action-slack-job-status@v1
        with:
          job-status: ${{ job.status }}
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: alerts
