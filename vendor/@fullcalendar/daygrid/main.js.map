{"version":3,"file":"main.js","sources":["src/TableView.tsx","src/TableSeg.ts","src/TableCellTop.tsx","src/TableCell.tsx","src/event-rendering.ts","src/TableListItemEvent.tsx","src/TableBlockEvent.tsx","src/event-placement.ts","src/TableRow.tsx","src/Popover.tsx","src/MorePopover.tsx","src/Table.tsx","src/DayTableSlicer.tsx","src/DayTable.tsx","src/DayTableView.tsx","src/TableDateProfileGenerator.ts","src/options.ts","src/main.ts"],"sourcesContent":["import {\n  VNode, createElement,\n  SimpleScrollGrid,\n  SimpleScrollGridSection,\n  ChunkContentCallbackArgs,\n  createRef,\n  ScrollGridSectionConfig,\n  ViewRoot,\n  DateComponent,\n  ViewProps,\n  RefObject,\n  renderScrollShim,\n  getStickyHeaderDates,\n  getStickyFooterScrollbar,\n  ChunkConfigRowContent,\n  Dictionary,\n} from '@fullcalendar/common'\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\n\nexport abstract class TableView<State=Dictionary> extends DateComponent<ViewProps, State> {\n  protected headerElRef: RefObject<HTMLTableCellElement> = createRef<HTMLTableCellElement>()\n\n  renderSimpleLayout(\n    headerRowContent: ChunkConfigRowContent,\n    bodyContent: (contentArg: ChunkContentCallbackArgs) => VNode,\n  ) {\n    let { props, context } = this\n    let sections: SimpleScrollGridSection[] = []\n    let stickyHeaderDates = getStickyHeaderDates(context.options)\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunk: {\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent,\n        },\n      })\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunk: { content: bodyContent },\n    })\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={['fc-daygrid'].concat(classNames).join(' ')}>\n            <SimpleScrollGrid\n              liquid={!props.isHeightAuto && !props.forPrint}\n              cols={[] /* TODO: make optional? */}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n\n  renderHScrollLayout(\n    headerRowContent: ChunkConfigRowContent,\n    bodyContent: (contentArg: ChunkContentCallbackArgs) => VNode,\n    colCnt: number,\n    dayMinWidth: number,\n  ) {\n    let ScrollGrid = this.context.pluginHooks.scrollGridImpl\n\n    if (!ScrollGrid) {\n      throw new Error('No ScrollGrid implementation')\n    }\n\n    let { props, context } = this\n    let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options)\n    let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options)\n    let sections: ScrollGridSectionConfig[] = []\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'main',\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent,\n        }],\n      })\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunks: [{\n        key: 'main',\n        content: bodyContent,\n      }],\n    })\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'main',\n          content: renderScrollShim,\n        }],\n      })\n    }\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={['fc-daygrid'].concat(classNames).join(' ')}>\n            <ScrollGrid\n              liquid={!props.isHeightAuto && !props.forPrint}\n              colGroups={[{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }]}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n}\n","import { EventSegUiInteractionState, Seg } from '@fullcalendar/common'\n\n// this is a DATA STRUCTURE, not a component\n\nexport interface TableSeg extends Seg {\n  row: number\n  firstCol: number\n  lastCol: number\n}\n\nexport function splitSegsByRow(segs: TableSeg[], rowCnt: number) {\n  let byRow: TableSeg[][] = []\n\n  for (let i = 0; i < rowCnt; i += 1) {\n    byRow[i] = []\n  }\n\n  for (let seg of segs) {\n    byRow[seg.row].push(seg)\n  }\n\n  return byRow\n}\n\nexport function splitSegsByFirstCol(segs: TableSeg[], colCnt: number) {\n  let byCol: TableSeg[][] = []\n\n  for (let i = 0; i < colCnt; i += 1) {\n    byCol[i] = []\n  }\n\n  for (let seg of segs) {\n    byCol[seg.firstCol].push(seg)\n  }\n\n  return byCol\n}\n\nexport function splitInteractionByRow(ui: EventSegUiInteractionState | null, rowCnt: number) {\n  let byRow: EventSegUiInteractionState[] = []\n\n  if (!ui) {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null\n    }\n  } else {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: [],\n      }\n    }\n\n    for (let seg of ui.segs) {\n      byRow[seg.row].segs.push(seg)\n    }\n  }\n\n  return byRow\n}\n","import {\n  createElement,\n  DateMarker,\n  DateRange,\n  buildNavLinkData,\n  DayCellContentArg,\n  DayCellContent,\n  BaseComponent,\n  DateProfile,\n  Dictionary,\n  Fragment,\n} from '@fullcalendar/common'\n\ninterface TableCellTopProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  showDayNumber: boolean\n  forceDayTop: boolean // hack to force-create an element with height (created by a nbsp)\n  todayRange: DateRange\n  extraHookProps?: Dictionary\n}\n\nexport class TableCellTop extends BaseComponent<TableCellTopProps> {\n  render() {\n    let { props } = this\n\n    let navLinkAttrs = this.context.options.navLinks\n      ? { 'data-navlink': buildNavLinkData(props.date), tabIndex: 0 }\n      : {}\n\n    return (\n      <DayCellContent\n        date={props.date}\n        dateProfile={props.dateProfile}\n        todayRange={props.todayRange}\n        showDayNumber={props.showDayNumber}\n        extraHookProps={props.extraHookProps}\n        defaultContent={renderTopInner}\n      >\n        {(innerElRef, innerContent) => (\n          (innerContent || props.forceDayTop) && (\n            <div className=\"fc-daygrid-day-top\" ref={innerElRef}>\n              <a className=\"fc-daygrid-day-number\" {...navLinkAttrs}>\n                {innerContent || <Fragment>&nbsp;</Fragment>}\n              </a>\n            </div>\n          )\n        )}\n      </DayCellContent>\n    )\n  }\n}\n\nfunction renderTopInner(props: DayCellContentArg) {\n  return props.dayNumberText\n}\n","import {\n  Ref,\n  ComponentChildren,\n  createElement,\n  DateMarker,\n  DateComponent,\n  CssDimValue,\n  DateRange,\n  buildNavLinkData,\n  RenderHook,\n  WeekNumberRoot,\n  DayCellRoot,\n  DateProfile,\n  VUIEvent,\n  setRef,\n  createFormatter,\n  ViewApi,\n  Dictionary,\n  MountArg,\n} from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\nimport { TableCellTop } from './TableCellTop'\n\nexport interface TableCellProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  extraHookProps?: Dictionary\n  extraDataAttrs?: Dictionary\n  extraClassNames?: string[]\n  elRef?: Ref<HTMLTableCellElement>\n  innerElRef?: Ref<HTMLDivElement>\n  bgContent: ComponentChildren\n  fgContentElRef?: Ref<HTMLDivElement> // TODO: rename!!! classname confusion. is the \"event\" div\n  fgContent: ComponentChildren\n  fgPaddingBottom: CssDimValue\n  // hasEvents: boolean // TODO: when reviving, event should \"have events\" even when none *start* on the cell\n  moreCnt: number\n  moreMarginTop: number\n  showDayNumber: boolean\n  showWeekNumber: boolean\n  forceDayTop: boolean\n  todayRange: DateRange\n  buildMoreLinkText: (num: number) => string\n  onMoreClick?: (arg: MoreLinkArg) => void\n  segsByEachCol: TableSeg[] // for more-popover. includes segs that aren't rooted in this cell but that pass over it\n  segIsHidden: { [instanceId: string]: boolean } // for more-popover. TODO: rename to be about selected instances\n}\n\nexport interface TableCellModel { // TODO: move somewhere else. combine with DayTableCell?\n  key: string\n  date: DateMarker\n  extraHookProps?: Dictionary\n  extraDataAttrs?: Dictionary\n  extraClassNames?: string[]\n}\n\nexport interface MoreLinkArg {\n  date: DateMarker\n  allSegs: TableSeg[]\n  hiddenSegs: TableSeg[]\n  moreCnt: number\n  dayEl: HTMLElement\n  ev: VUIEvent\n}\n\nexport interface HookProps {\n  date: Date\n  isPast: boolean\n  isFuture: boolean\n  isToday: boolean\n}\n\nexport interface MoreLinkContentArg {\n  num: number\n  text: string\n  view: ViewApi\n}\n\nexport type MoreLinkMountArg = MountArg<MoreLinkContentArg>\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' })\n\nexport class TableCell extends DateComponent<TableCellProps> {\n  private rootEl: HTMLElement\n\n  render() {\n    let { options, viewApi } = this.context\n    let { props } = this\n    let { date, dateProfile } = props\n\n    let hookProps: MoreLinkContentArg = {\n      num: props.moreCnt,\n      text: props.buildMoreLinkText(props.moreCnt),\n      view: viewApi,\n    }\n\n    let navLinkAttrs = options.navLinks\n      ? { 'data-navlink': buildNavLinkData(date, 'week'), tabIndex: 0 }\n      : {}\n\n    return (\n      <DayCellRoot\n        date={date}\n        dateProfile={dateProfile}\n        todayRange={props.todayRange}\n        showDayNumber={props.showDayNumber}\n        extraHookProps={props.extraHookProps}\n        elRef={this.handleRootEl}\n      >\n        {(dayElRef, dayClassNames, rootDataAttrs, isDisabled) => (\n          <td\n            ref={dayElRef}\n            className={['fc-daygrid-day'].concat(dayClassNames, props.extraClassNames || []).join(' ')}\n            {...rootDataAttrs}\n            {...props.extraDataAttrs}\n          >\n            <div className=\"fc-daygrid-day-frame fc-scrollgrid-sync-inner\" ref={props.innerElRef /* different from hook system! RENAME */}>\n              {props.showWeekNumber && (\n                <WeekNumberRoot date={date} defaultFormat={DEFAULT_WEEK_NUM_FORMAT}>\n                  {(weekElRef, weekClassNames, innerElRef, innerContent) => (\n                    <a\n                      ref={weekElRef}\n                      className={['fc-daygrid-week-number'].concat(weekClassNames).join(' ')}\n                      {...navLinkAttrs}\n                    >\n                      {innerContent}\n                    </a>\n                  )}\n                </WeekNumberRoot>\n              )}\n              {!isDisabled && (\n                <TableCellTop\n                  date={date}\n                  dateProfile={dateProfile}\n                  showDayNumber={props.showDayNumber}\n                  forceDayTop={props.forceDayTop}\n                  todayRange={props.todayRange}\n                  extraHookProps={props.extraHookProps}\n                />\n              )}\n              <div\n                className=\"fc-daygrid-day-events\"\n                ref={props.fgContentElRef}\n                style={{ paddingBottom: props.fgPaddingBottom }}\n              >\n                {props.fgContent}\n                {Boolean(props.moreCnt) && (\n                  <div className=\"fc-daygrid-day-bottom\" style={{ marginTop: props.moreMarginTop }}>\n                    <RenderHook<MoreLinkContentArg> // needed?\n                      hookProps={hookProps}\n                      classNames={options.moreLinkClassNames}\n                      content={options.moreLinkContent}\n                      defaultContent={renderMoreLinkInner}\n                      didMount={options.moreLinkDidMount}\n                      willUnmount={options.moreLinkWillUnmount}\n                    >\n                      {(rootElRef, classNames, innerElRef, innerContent) => (\n                        <a\n                          ref={rootElRef}\n                          className={['fc-daygrid-more-link'].concat(classNames).join(' ')}\n                          onClick={this.handleMoreLinkClick}\n                        >\n                          {innerContent}\n                        </a>\n                      )}\n                    </RenderHook>\n                  </div>\n                )}\n              </div>\n              <div className=\"fc-daygrid-day-bg\">\n                {props.bgContent}\n              </div>\n            </div>\n          </td>\n        )}\n      </DayCellRoot>\n    )\n  }\n\n  handleRootEl = (el: HTMLElement) => {\n    this.rootEl = el\n\n    setRef(this.props.elRef, el)\n  }\n\n  handleMoreLinkClick = (ev: VUIEvent) => {\n    let { props } = this\n\n    if (props.onMoreClick) {\n      let allSegs = props.segsByEachCol\n      let hiddenSegs = allSegs.filter(\n        (seg: TableSeg) => props.segIsHidden[seg.eventRange.instance.instanceId],\n      )\n\n      props.onMoreClick({\n        date: props.date,\n        allSegs,\n        hiddenSegs,\n        moreCnt: props.moreCnt,\n        dayEl: this.rootEl,\n        ev,\n      })\n    }\n  }\n}\n\nTableCell.addPropsEquality({\n  onMoreClick: true, // never forces rerender\n})\n\nfunction renderMoreLinkInner(props) {\n  return props.text\n}\n","import { createFormatter } from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport const DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow',\n})\n\nexport function hasListItemDisplay(seg: TableSeg) {\n  let { display } = seg.eventRange.ui\n\n  return display === 'list-item' || (\n    display === 'auto' &&\n    !seg.eventRange.def.allDay &&\n    seg.firstCol === seg.lastCol && // can't be multi-day\n    seg.isStart && // \"\n    seg.isEnd // \"\n  )\n}\n","import { createElement, BaseComponent, Seg, EventRoot, buildSegTimeText, EventContentArg, Fragment } from '@fullcalendar/common'\nimport { DEFAULT_TABLE_EVENT_TIME_FORMAT } from './event-rendering'\n\nexport interface DotTableEventProps {\n  seg: Seg\n  isDragging: boolean\n  isSelected: boolean\n  isPast: boolean\n  isFuture: boolean\n  isToday: boolean\n  defaultDisplayEventEnd: boolean\n}\n\nexport class TableListItemEvent extends BaseComponent<DotTableEventProps> {\n  render() {\n    let { props, context } = this\n    let timeFormat = context.options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT\n    let timeText = buildSegTimeText(\n      props.seg,\n      timeFormat,\n      context,\n      true,\n      props.defaultDisplayEventEnd,\n    )\n\n    return (\n      <EventRoot\n        seg={props.seg}\n        timeText={timeText}\n        defaultContent={renderInnerContent}\n        isDragging={props.isDragging}\n        isResizing={false}\n        isDateSelecting={false}\n        isSelected={props.isSelected}\n        isPast={props.isPast}\n        isFuture={props.isFuture}\n        isToday={props.isToday}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent) => ( // we don't use styles!\n          <a\n            className={['fc-daygrid-event', 'fc-daygrid-dot-event'].concat(classNames).join(' ')}\n            ref={rootElRef}\n            {...getSegAnchorAttrs(props.seg)}\n          >\n            {innerContent}\n          </a>\n        )}\n      </EventRoot>\n    )\n  }\n}\n\nfunction renderInnerContent(innerProps: EventContentArg) {\n  return (\n    <Fragment>\n      <div\n        className=\"fc-daygrid-event-dot\"\n        style={{ borderColor: innerProps.borderColor || innerProps.backgroundColor }}\n      />\n      {innerProps.timeText && (\n        <div className=\"fc-event-time\">{innerProps.timeText}</div>\n      )}\n      <div className=\"fc-event-title\">\n        {innerProps.event.title || <Fragment>&nbsp;</Fragment>}\n      </div>\n    </Fragment>\n  )\n}\n\nfunction getSegAnchorAttrs(seg: Seg) { // not dry. in StandardEvent too\n  let { url } = seg.eventRange.def\n  return url ? { href: url } : {}\n}\n","import { createElement, StandardEvent, BaseComponent, MinimalEventProps } from '@fullcalendar/common'\nimport { DEFAULT_TABLE_EVENT_TIME_FORMAT } from './event-rendering'\n\nexport interface TableBlockEventProps extends MinimalEventProps {\n  defaultDisplayEventEnd: boolean\n}\n\nexport class TableBlockEvent extends BaseComponent<TableBlockEventProps> {\n  render() {\n    let { props } = this\n\n    return (\n      <StandardEvent\n        {...props}\n        extraClassNames={['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event']}\n        defaultTimeFormat={DEFAULT_TABLE_EVENT_TIME_FORMAT}\n        defaultDisplayEventEnd={props.defaultDisplayEventEnd}\n        disableResizing={!props.seg.eventRange.def.allDay}\n      />\n    )\n  }\n}\n","import {\n  sortEventSegs,\n  OrderSpec,\n  EventApi,\n  EventRenderRange,\n  addDays,\n  intersectRanges,\n  DateMarker,\n} from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\nimport { TableCellModel } from './TableCell'\n\ninterface TableSegPlacement {\n  seg: TableSeg\n  top: number\n  bottom: number\n}\n\nexport function computeFgSegPlacement( // for one row. TODO: print mode?\n  cellModels: TableCellModel[],\n  segs: TableSeg[],\n  dayMaxEvents: boolean | number,\n  dayMaxEventRows: boolean | number,\n  eventHeights: { [instanceIdAndFirstCol: string]: number },\n  maxContentHeight: number | null,\n  colCnt: number,\n  eventOrderSpecs: OrderSpec<EventApi>[],\n) {\n  let colPlacements: TableSegPlacement[][] = [] // if event spans multiple cols, its present in each col\n  let moreCnts: number[] = [] // by-col\n  let segIsHidden: { [instanceId: string]: boolean } = {}\n  let segTops: { [instanceId: string]: number } = {} // always populated for each seg\n  let segMarginTops: { [instanceId: string]: number } = {} // simetimes populated for each seg\n  let moreTops: { [col: string]: number } = {}\n  let paddingBottoms: { [col: string]: number } = {} // for each cell's inner-wrapper div\n\n  for (let i = 0; i < colCnt; i += 1) {\n    colPlacements.push([])\n    moreCnts.push(0)\n  }\n\n  segs = sortEventSegs(segs, eventOrderSpecs) as TableSeg[]\n\n  for (let seg of segs) {\n    let { instanceId } = seg.eventRange.instance\n    let eventHeight = eventHeights[instanceId + ':' + seg.firstCol]\n\n    placeSeg(seg, eventHeight || 0) // will keep colPlacements sorted by top\n  }\n\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    limitByMaxHeight(moreCnts, segIsHidden, colPlacements, maxContentHeight) // populates moreCnts/segIsHidden\n  } else if (typeof dayMaxEvents === 'number') {\n    limitByMaxEvents(moreCnts, segIsHidden, colPlacements, dayMaxEvents) // populates moreCnts/segIsHidden\n  } else if (typeof dayMaxEventRows === 'number') {\n    limitByMaxRows(moreCnts, segIsHidden, colPlacements, dayMaxEventRows) // populates moreCnts/segIsHidden\n  }\n\n  // computes segTops/segMarginTops/moreTops/paddingBottoms\n  for (let col = 0; col < colCnt; col += 1) {\n    let placements = colPlacements[col]\n    let currentNonAbsBottom = 0\n    let currentAbsHeight = 0\n\n    for (let placement of placements) {\n      let seg = placement.seg\n\n      if (!segIsHidden[seg.eventRange.instance.instanceId]) {\n        segTops[seg.eventRange.instance.instanceId] = placement.top // from top of container\n\n        if (seg.firstCol === seg.lastCol && seg.isStart && seg.isEnd) { // TODO: simpler way? NOT DRY\n          segMarginTops[seg.eventRange.instance.instanceId] =\n            placement.top - currentNonAbsBottom // from previous seg bottom\n\n          currentAbsHeight = 0\n          currentNonAbsBottom = placement.bottom\n        } else { // multi-col event, abs positioned\n          currentAbsHeight = placement.bottom - currentNonAbsBottom\n        }\n      }\n    }\n\n    if (currentAbsHeight) {\n      if (moreCnts[col]) {\n        moreTops[col] = currentAbsHeight\n      } else {\n        paddingBottoms[col] = currentAbsHeight\n      }\n    }\n  }\n\n  function placeSeg(seg, segHeight) {\n    if (!tryPlaceSegAt(seg, segHeight, 0)) {\n      for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n        for (let placement of colPlacements[col]) { // will repeat multi-day segs!!!!!!! bad!!!!!!\n          if (tryPlaceSegAt(seg, segHeight, placement.bottom)) {\n            return\n          }\n        }\n      }\n    }\n  }\n\n  function tryPlaceSegAt(seg, segHeight, top) {\n    if (canPlaceSegAt(seg, segHeight, top)) {\n      for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n        let placements = colPlacements[col]\n        let insertionIndex = 0\n\n        while (\n          insertionIndex < placements.length &&\n          top >= placements[insertionIndex].top\n        ) {\n          insertionIndex += 1\n        }\n\n        placements.splice(insertionIndex, 0, { // will keep it sorted by top\n          seg,\n          top,\n          bottom: top + segHeight,\n        })\n      }\n\n      return true\n    }\n\n    return false\n  }\n\n  function canPlaceSegAt(seg, segHeight, top) {\n    for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n      for (let placement of colPlacements[col]) {\n        if (top < placement.bottom && top + segHeight > placement.top) { // collide?\n          return false\n        }\n      }\n    }\n\n    return true\n  }\n\n  // what does this do!?\n  for (let instanceIdAndFirstCol in eventHeights) {\n    if (!eventHeights[instanceIdAndFirstCol]) {\n      segIsHidden[instanceIdAndFirstCol.split(':')[0]] = true\n    }\n  }\n\n  let segsByFirstCol = colPlacements.map(extractFirstColSegs) // operates on the sorted cols\n  let segsByEachCol = colPlacements.map((placements, col) => {\n    let segsForCols = extractAllColSegs(placements)\n    segsForCols = resliceDaySegs(segsForCols, cellModels[col].date, col)\n    return segsForCols\n  })\n\n  return {\n    segsByFirstCol,\n    segsByEachCol,\n    segIsHidden,\n    segTops,\n    segMarginTops,\n    moreCnts,\n    moreTops,\n    paddingBottoms,\n  }\n}\n\nfunction extractFirstColSegs(oneColPlacements: TableSegPlacement[], col: number) {\n  let segs: TableSeg[] = []\n\n  for (let placement of oneColPlacements) {\n    if (placement.seg.firstCol === col) {\n      segs.push(placement.seg)\n    }\n  }\n\n  return segs\n}\n\nfunction extractAllColSegs(oneColPlacements: TableSegPlacement[]) {\n  let segs: TableSeg[] = []\n\n  for (let placement of oneColPlacements) {\n    segs.push(placement.seg)\n  }\n\n  return segs\n}\n\nfunction limitByMaxHeight(hiddenCnts, segIsHidden, colPlacements, maxContentHeight) {\n  limitEvents(\n    hiddenCnts,\n    segIsHidden,\n    colPlacements,\n    true,\n    (placement) => placement.bottom <= maxContentHeight,\n  )\n}\n\nfunction limitByMaxEvents(hiddenCnts, segIsHidden, colPlacements, dayMaxEvents) {\n  limitEvents(\n    hiddenCnts,\n    segIsHidden,\n    colPlacements,\n    false,\n    (placement, levelIndex) => levelIndex < dayMaxEvents,\n  )\n}\n\nfunction limitByMaxRows(hiddenCnts, segIsHidden, colPlacements, dayMaxEventRows) {\n  limitEvents(\n    hiddenCnts,\n    segIsHidden,\n    colPlacements,\n    true,\n    (placement, levelIndex) => levelIndex < dayMaxEventRows,\n  )\n}\n\n/*\npopulates the given hiddenCnts/segIsHidden, which are supplied empty.\nTODO: return them instead\n*/\nfunction limitEvents(hiddenCnts, segIsHidden, colPlacements, _moreLinkConsumesLevel, isPlacementInBounds) {\n  let colCnt = hiddenCnts.length\n  let segIsVisible = {} as any // TODO: instead, use segIsHidden with true/false?\n  let visibleColPlacements = [] // will mirror colPlacements\n\n  for (let col = 0; col < colCnt; col += 1) {\n    visibleColPlacements.push([])\n  }\n\n  for (let col = 0; col < colCnt; col += 1) {\n    let placements = colPlacements[col]\n    let level = 0\n\n    for (let placement of placements) {\n      if (isPlacementInBounds(placement, level)) {\n        recordVisible(placement)\n      } else {\n        recordHidden(placement, level, _moreLinkConsumesLevel)\n      }\n\n      // only considered a level if the seg had height\n      if (placement.top !== placement.bottom) {\n        level += 1\n      }\n    }\n  }\n\n  function recordVisible(placement) {\n    let { seg } = placement\n    let { instanceId } = seg.eventRange.instance\n\n    if (!segIsVisible[instanceId]) {\n      segIsVisible[instanceId] = true\n\n      for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n        let destPlacements = visibleColPlacements[col]\n        let newPosition = 0\n\n        // insert while keeping top sorted in each column\n        while (\n          newPosition < destPlacements.length &&\n          placement.top >= destPlacements[newPosition].top\n        ) {\n          newPosition += 1\n        }\n\n        destPlacements.splice(newPosition, 0, placement)\n      }\n    }\n  }\n\n  function recordHidden(placement, currentLevel, moreLinkConsumesLevel) {\n    let { seg } = placement\n    let { instanceId } = seg.eventRange.instance\n\n    if (!segIsHidden[instanceId]) {\n      segIsHidden[instanceId] = true\n\n      for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n        hiddenCnts[col] += 1\n        let hiddenCnt = hiddenCnts[col]\n\n        if (moreLinkConsumesLevel && hiddenCnt === 1 && currentLevel > 0) {\n          let doomedLevel = currentLevel - 1\n\n          while (visibleColPlacements[col].length > doomedLevel) {\n            recordHidden(\n              visibleColPlacements[col].pop(), // removes\n              visibleColPlacements[col].length, // will execute after the pop. will be the index of the removed placement\n              false,\n            )\n          }\n        }\n      }\n    }\n  }\n}\n\n// Given the events within an array of segment objects, reslice them to be in a single day\nfunction resliceDaySegs(segs: TableSeg[], dayDate: DateMarker, colIndex: number) {\n  let dayStart = dayDate\n  let dayEnd = addDays(dayStart, 1)\n  let dayRange = { start: dayStart, end: dayEnd }\n  let newSegs = []\n\n  for (let seg of segs) {\n    let eventRange = seg.eventRange\n    let origRange = eventRange.range\n    let slicedRange = intersectRanges(origRange, dayRange)\n\n    if (slicedRange) {\n      newSegs.push({\n        ...seg,\n        firstCol: colIndex,\n        lastCol: colIndex,\n        eventRange: {\n          def: eventRange.def,\n          ui: { ...eventRange.ui, durationEditable: false }, // hack to disable resizing\n          instance: eventRange.instance,\n          range: slicedRange,\n        } as EventRenderRange,\n        isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n        isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf(),\n      })\n    }\n  }\n\n  return newSegs\n}\n","import {\n  EventSegUiInteractionState,\n  VNode,\n  DateComponent,\n  createElement,\n  PositionCache,\n  RefMap,\n  mapHash,\n  CssDimValue,\n  DateRange,\n  getSegMeta,\n  DateProfile,\n  Fragment,\n  BgEvent,\n  renderFill,\n  isPropsEqual,\n  createRef,\n  buildEventRangeKey,\n} from '@fullcalendar/common'\nimport { TableSeg, splitSegsByFirstCol } from './TableSeg'\nimport { TableCell, TableCellModel, MoreLinkArg } from './TableCell'\nimport { TableListItemEvent } from './TableListItemEvent'\nimport { TableBlockEvent } from './TableBlockEvent'\nimport { computeFgSegPlacement } from './event-placement'\nimport { hasListItemDisplay } from './event-rendering'\n\n// TODO: attach to window resize?\n\nexport interface TableRowProps {\n  cells: TableCellModel[]\n  renderIntro?: () => VNode\n  businessHourSegs: TableSeg[]\n  bgEventSegs: TableSeg[]\n  fgEventSegs: TableSeg[]\n  dateSelectionSegs: TableSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  clientWidth: number | null\n  clientHeight: number | null // simply for causing an updateSize, for when liquid height\n  onMoreClick?: (arg: MoreLinkArg & {fromCol: number}) => void\n  dateProfile: DateProfile\n  todayRange: DateRange\n  showDayNumbers: boolean\n  showWeekNumbers: boolean\n  buildMoreLinkText: (num: number) => string\n}\n\ninterface TableRowState {\n  framePositions: PositionCache\n  maxContentHeight: number | null\n  segHeights: { [instanceIdAndFirstCol: string]: number } | null\n}\n\nexport class TableRow extends DateComponent<TableRowProps, TableRowState> {\n  private cellElRefs = new RefMap<HTMLTableCellElement>() // the <td>\n  private frameElRefs = new RefMap<HTMLElement>() // the fc-daygrid-day-frame\n  private fgElRefs = new RefMap<HTMLDivElement>() // the fc-daygrid-day-events\n  private segHarnessRefs = new RefMap<HTMLDivElement>() // indexed by \"instanceId:firstCol\"\n  private rootElRef = createRef<HTMLTableRowElement>()\n\n  state: TableRowState = {\n    framePositions: null,\n    maxContentHeight: null,\n    segHeights: {},\n  }\n\n  render() {\n    let { props, state, context } = this\n    let colCnt = props.cells.length\n\n    let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt)\n    let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt)\n    let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt)\n    let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt)\n\n    let { paddingBottoms, segsByFirstCol, segsByEachCol, segIsHidden, segTops, segMarginTops, moreCnts, moreTops } = computeFgSegPlacement(\n      props.cells,\n      props.fgEventSegs,\n      props.dayMaxEvents,\n      props.dayMaxEventRows,\n      state.segHeights,\n      state.maxContentHeight,\n      colCnt,\n      context.options.eventOrder,\n    )\n\n    let selectedInstanceHash = // TODO: messy way to compute this\n      (props.eventDrag && props.eventDrag.affectedInstances) ||\n      (props.eventResize && props.eventResize.affectedInstances) ||\n      {}\n\n    return (\n      <tr ref={this.rootElRef}>\n        {props.renderIntro && props.renderIntro()}\n        {props.cells.map((cell, col) => {\n          let normalFgNodes = this.renderFgSegs(\n            segsByFirstCol[col],\n            segIsHidden,\n            segTops,\n            segMarginTops,\n            selectedInstanceHash,\n            props.todayRange,\n          )\n\n          let mirrorFgNodes = this.renderFgSegs(\n            mirrorSegsByCol[col],\n            {},\n            segTops, // use same tops as real rendering\n            {},\n            {},\n            props.todayRange,\n            Boolean(props.eventDrag),\n            Boolean(props.eventResize),\n            false, // date-selecting (because mirror is never drawn for date selection)\n          )\n\n          return (\n            <TableCell\n              key={cell.key}\n              elRef={this.cellElRefs.createRef(cell.key)}\n              innerElRef={this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */}\n              dateProfile={props.dateProfile}\n              date={cell.date}\n              showDayNumber={props.showDayNumbers}\n              showWeekNumber={props.showWeekNumbers && col === 0}\n              forceDayTop={props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */}\n              todayRange={props.todayRange}\n              extraHookProps={cell.extraHookProps}\n              extraDataAttrs={cell.extraDataAttrs}\n              extraClassNames={cell.extraClassNames}\n              moreCnt={moreCnts[col]}\n              buildMoreLinkText={props.buildMoreLinkText}\n              onMoreClick={(arg) => {\n                props.onMoreClick({ ...arg, fromCol: col })\n              }}\n              segIsHidden={segIsHidden}\n              moreMarginTop={moreTops[col] /* rename */}\n              segsByEachCol={segsByEachCol[col]}\n              fgPaddingBottom={paddingBottoms[col]}\n              fgContentElRef={this.fgElRefs.createRef(cell.key)}\n              fgContent={( // Fragment scopes the keys\n                <Fragment>\n                  <Fragment>{normalFgNodes}</Fragment>\n                  <Fragment>{mirrorFgNodes}</Fragment>\n                </Fragment>\n              )}\n              bgContent={( // Fragment scopes the keys\n                <Fragment>\n                  {this.renderFillSegs(highlightSegsByCol[col], 'highlight')}\n                  {this.renderFillSegs(businessHoursByCol[col], 'non-business')}\n                  {this.renderFillSegs(bgEventSegsByCol[col], 'bg-event')}\n                </Fragment>\n              )}\n            />\n          )\n        })}\n      </tr>\n    )\n  }\n\n  componentDidMount() {\n    this.updateSizing(true)\n  }\n\n  componentDidUpdate(prevProps: TableRowProps, prevState: TableRowState) {\n    let currentProps = this.props\n\n    this.updateSizing(\n      !isPropsEqual(prevProps, currentProps),\n    )\n  }\n\n  getHighlightSegs(): TableSeg[] {\n    let { props } = this\n\n    if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n      return props.eventDrag.segs as TableSeg[]\n    }\n\n    if (props.eventResize && props.eventResize.segs.length) { // messy check\n      return props.eventResize.segs as TableSeg[]\n    }\n\n    return props.dateSelectionSegs\n  }\n\n  getMirrorSegs(): TableSeg[] {\n    let { props } = this\n\n    if (props.eventResize && props.eventResize.segs.length) { // messy check\n      return props.eventResize.segs as TableSeg[]\n    }\n\n    return []\n  }\n\n  renderFgSegs(\n    segs: TableSeg[],\n    segIsHidden: { [instanceId: string]: boolean }, // does NOT mean display:hidden\n    segTops: { [instanceId: string]: number },\n    segMarginTops: { [instanceId: string]: number },\n    selectedInstanceHash: { [instanceId: string]: any },\n    todayRange: DateRange,\n    isDragging?: boolean,\n    isResizing?: boolean,\n    isDateSelecting?: boolean,\n  ): VNode[] {\n    let { context } = this\n    let { eventSelection } = this.props\n    let { framePositions } = this.state\n    let defaultDisplayEventEnd = this.props.cells.length === 1 // colCnt === 1\n    let nodes: VNode[] = []\n\n    if (framePositions) {\n      for (let seg of segs) {\n        let instanceId = seg.eventRange.instance.instanceId\n        let isMirror = isDragging || isResizing || isDateSelecting\n        let isSelected = selectedInstanceHash[instanceId]\n        let isInvisible = segIsHidden[instanceId] || isSelected\n\n        // TODO: simpler way? NOT DRY\n        let isAbsolute = segIsHidden[instanceId] || isMirror || seg.firstCol !== seg.lastCol || !seg.isStart || !seg.isEnd\n\n        let marginTop: CssDimValue\n        let top: CssDimValue\n        let left: CssDimValue\n        let right: CssDimValue\n\n        if (isAbsolute) {\n          top = segTops[instanceId]\n\n          if (context.isRtl) {\n            right = 0\n            left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n          } else {\n            left = 0\n            right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n          }\n        } else {\n          marginTop = segMarginTops[instanceId]\n        }\n\n        /*\n        known bug: events that are force to be list-item but span multiple days still take up space in later columns\n        */\n        nodes.push(\n          <div\n            className={'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : '')}\n            key={instanceId}\n            // in print mode when in mult cols, could collide\n            ref={isMirror ? null : this.segHarnessRefs.createRef(instanceId + ':' + seg.firstCol)}\n            style={{\n              visibility: isInvisible ? 'hidden' : ('' as any),\n              marginTop: marginTop || '',\n              top: top || '',\n              left: left || '',\n              right: right || '',\n            }}\n          >\n            {hasListItemDisplay(seg) ? (\n              <TableListItemEvent\n                seg={seg}\n                isDragging={isDragging}\n                isSelected={instanceId === eventSelection}\n                defaultDisplayEventEnd={defaultDisplayEventEnd}\n                {...getSegMeta(seg, todayRange)}\n              />\n            ) : (\n              <TableBlockEvent\n                seg={seg}\n                isDragging={isDragging}\n                isResizing={isResizing}\n                isDateSelecting={isDateSelecting}\n                isSelected={instanceId === eventSelection}\n                defaultDisplayEventEnd={defaultDisplayEventEnd}\n                {...getSegMeta(seg, todayRange)}\n              />\n            )}\n          </div>,\n        )\n      }\n    }\n\n    return nodes\n  }\n\n  renderFillSegs(segs: TableSeg[], fillType: string): VNode {\n    let { isRtl } = this.context\n    let { todayRange } = this.props\n    let { framePositions } = this.state\n    let nodes: VNode[] = []\n\n    if (framePositions) {\n      for (let seg of segs) {\n        let leftRightCss = isRtl ? {\n          right: 0,\n          left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n        } : {\n          left: 0,\n          right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n        }\n\n        nodes.push(\n          <div\n            key={buildEventRangeKey(seg.eventRange)}\n            className=\"fc-daygrid-bg-harness\"\n            style={leftRightCss}\n          >\n            {fillType === 'bg-event' ?\n              <BgEvent seg={seg} {...getSegMeta(seg, todayRange)} /> :\n              renderFill(fillType)}\n          </div>,\n        )\n      }\n    }\n\n    return createElement(Fragment, {}, ...nodes)\n  }\n\n  updateSizing(isExternalSizingChange) {\n    let { props, frameElRefs } = this\n\n    if (props.clientWidth !== null) { // positioning ready?\n      if (isExternalSizingChange) {\n        let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key])\n\n        if (frameEls.length) {\n          let originEl = this.rootElRef.current\n\n          this.setState({ // will trigger isCellPositionsChanged...\n            framePositions: new PositionCache(\n              originEl,\n              frameEls,\n              true, // isHorizontal\n              false,\n            ),\n          })\n        }\n      }\n\n      let limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true\n\n      this.setState({\n        segHeights: this.computeSegHeights(),\n        maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n      })\n    }\n  }\n\n  computeSegHeights() { // query\n    return mapHash(this.segHarnessRefs.currentMap, (eventHarnessEl) => (\n      eventHarnessEl.getBoundingClientRect().height\n    ))\n  }\n\n  computeMaxContentHeight() {\n    let firstKey = this.props.cells[0].key\n    let cellEl = this.cellElRefs.currentMap[firstKey]\n    let fcContainerEl = this.fgElRefs.currentMap[firstKey]\n\n    return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top\n  }\n\n  public getCellEls() {\n    let elMap = this.cellElRefs.currentMap\n\n    return this.props.cells.map((cell) => elMap[cell.key])\n  }\n}\n\nTableRow.addPropsEquality({\n  onMoreClick: true, // never forces rerender\n})\n\nTableRow.addStateEquality({\n  segHeights: isPropsEqual,\n})\n","import { createElement, ComponentChildren, applyStyle, BaseComponent, DelayedRunner, Ref, setRef, Dictionary } from '@fullcalendar/common'\n\nexport interface PopoverProps {\n  title: string\n  extraClassNames?: string[]\n  extraAttrs?: Dictionary\n  alignmentEl: HTMLElement\n  topAlignmentEl?: HTMLElement\n  onClose?: () => void\n  elRef?: Ref<HTMLDivElement>\n  children?: ComponentChildren\n}\n\nconst PADDING_FROM_VIEWPORT = 10\nconst SCROLL_DEBOUNCE = 10\n\nexport class Popover extends BaseComponent<PopoverProps> {\n  private rootEl: HTMLElement\n  private repositioner = new DelayedRunner(this.updateSize.bind(this))\n\n  render() {\n    let { theme } = this.context\n    let { props } = this\n    let classNames = [\n      'fc-popover',\n      theme.getClass('popover'),\n    ].concat(\n      props.extraClassNames || [],\n    )\n\n    return (\n      <div className={classNames.join(' ')} {...props.extraAttrs} ref={this.handleRootEl}>\n        <div className={'fc-popover-header ' + theme.getClass('popoverHeader')}>\n          <span className=\"fc-popover-title\">\n            {props.title}\n          </span>\n          <span className={'fc-popover-close ' + theme.getIconClass('close')} onClick={this.handleCloseClick} />\n        </div>\n        <div className={'fc-popover-body ' + theme.getClass('popoverContent')}>\n          {props.children}\n        </div>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleDocumentMousedown)\n    document.addEventListener('scroll', this.handleDocumentScroll)\n    this.updateSize()\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleDocumentMousedown)\n    document.removeEventListener('scroll', this.handleDocumentScroll)\n  }\n\n  handleRootEl = (el: HTMLElement | null) => {\n    this.rootEl = el\n\n    if (this.props.elRef) {\n      setRef(this.props.elRef, el)\n    }\n  }\n\n  // Triggered when the user clicks *anywhere* in the document, for the autoHide feature\n  handleDocumentMousedown = (ev) => {\n    let { onClose } = this.props\n\n    // only hide the popover if the click happened outside the popover\n    if (onClose && !this.rootEl.contains(ev.target)) {\n      onClose()\n    }\n  }\n\n  handleDocumentScroll = () => {\n    this.repositioner.request(SCROLL_DEBOUNCE)\n  }\n\n  handleCloseClick = () => {\n    let { onClose } = this.props\n\n    if (onClose) {\n      onClose()\n    }\n  }\n\n  // TODO: adjust on window resize\n\n  /*\n  NOTE: the popover is position:fixed, so coordinates are relative to the viewport\n  NOTE: the PARENT calls this as well, on window resize. we would have wanted to use the repositioner,\n        but need to ensure that all other components have updated size first (for alignmentEl)\n  */\n  private updateSize() {\n    let { alignmentEl, topAlignmentEl } = this.props\n    let { rootEl } = this\n\n    if (!rootEl) {\n      return // not sure why this was null, but we shouldn't let external components call updateSize() anyway\n    }\n\n    let dims = rootEl.getBoundingClientRect() // only used for width,height\n    let alignment = alignmentEl.getBoundingClientRect()\n\n    let top = topAlignmentEl ? topAlignmentEl.getBoundingClientRect().top : alignment.top\n    top = Math.min(top, window.innerHeight - dims.height - PADDING_FROM_VIEWPORT)\n    top = Math.max(top, PADDING_FROM_VIEWPORT)\n\n    let left: number\n\n    if (this.context.isRtl) {\n      left = alignment.right - dims.width\n    } else {\n      left = alignment.left\n    }\n\n    left = Math.min(left, window.innerWidth - dims.width - PADDING_FROM_VIEWPORT)\n    left = Math.max(left, PADDING_FROM_VIEWPORT)\n\n    applyStyle(rootEl, { top, left })\n  }\n}\n","import {\n  DateComponent,\n  DateMarker,\n  createElement,\n  EventInstanceHash,\n  addDays,\n  DateRange,\n  getSegMeta,\n  DayCellRoot,\n  DayCellContent,\n  DateProfile,\n  createRef,\n} from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\nimport { TableBlockEvent } from './TableBlockEvent'\nimport { TableListItemEvent } from './TableListItemEvent'\nimport { Popover } from './Popover'\nimport { hasListItemDisplay } from './event-rendering'\n\nexport interface MorePopoverProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  segs: TableSeg[]\n  selectedInstanceId: string\n  hiddenInstances: EventInstanceHash\n  alignmentEl: HTMLElement\n  topAlignmentEl?: HTMLElement\n  onCloseClick?: () => void\n  todayRange: DateRange\n}\n\nexport class MorePopover extends DateComponent<MorePopoverProps> {\n  private rootElRef = createRef<HTMLElement>()\n\n  render() {\n    let { options, dateEnv } = this.context\n    let { props } = this\n    let { date, hiddenInstances, todayRange, dateProfile, selectedInstanceId } = props\n    let title = dateEnv.format(date, options.dayPopoverFormat)\n\n    return (\n      <DayCellRoot date={date} dateProfile={dateProfile} todayRange={todayRange} elRef={this.rootElRef}>\n        {(rootElRef, dayClassNames, dataAttrs) => (\n          <Popover\n            elRef={rootElRef}\n            title={title}\n            extraClassNames={['fc-more-popover'].concat(dayClassNames)}\n            extraAttrs={dataAttrs}\n            onClose={props.onCloseClick}\n            alignmentEl={props.alignmentEl}\n            topAlignmentEl={props.topAlignmentEl}\n          >\n            <DayCellContent date={date} dateProfile={dateProfile} todayRange={todayRange}>\n              {(innerElRef, innerContent) => (\n                innerContent &&\n                  <div className=\"fc-more-popover-misc\" ref={innerElRef}>{innerContent}</div>\n              )}\n            </DayCellContent>\n            {props.segs.map((seg) => {\n              let instanceId = seg.eventRange.instance.instanceId\n\n              return (\n                <div\n                  className=\"fc-daygrid-event-harness\"\n                  key={instanceId}\n                  style={{\n                    visibility: hiddenInstances[instanceId] ? 'hidden' : ('' as any),\n                  }}\n                >\n                  {hasListItemDisplay(seg) ? (\n                    <TableListItemEvent\n                      seg={seg}\n                      isDragging={false}\n                      isSelected={instanceId === selectedInstanceId}\n                      defaultDisplayEventEnd={false}\n                      {...getSegMeta(seg, todayRange)}\n                    />\n                  ) : (\n                    <TableBlockEvent\n                      seg={seg}\n                      isDragging={false}\n                      isResizing={false}\n                      isDateSelecting={false}\n                      isSelected={instanceId === selectedInstanceId}\n                      defaultDisplayEventEnd={false}\n                      {...getSegMeta(seg, todayRange)}\n                    />\n                  )}\n                </div>\n              )\n            })}\n          </Popover>\n        )}\n      </DayCellRoot>\n    )\n  }\n\n  positionToHit(positionLeft: number, positionTop: number, originEl: HTMLElement) {\n    let rootEl = this.rootElRef.current\n\n    if (!originEl || !rootEl) { // why?\n      return null\n    }\n\n    let originRect = originEl.getBoundingClientRect()\n    let elRect = rootEl.getBoundingClientRect()\n    let newOriginLeft = elRect.left - originRect.left\n    let newOriginTop = elRect.top - originRect.top\n    let localLeft = positionLeft - newOriginLeft\n    let localTop = positionTop - newOriginTop\n    let date = this.props.date\n\n    if ( // ugly way to detect intersection\n      localLeft >= 0 && localLeft < elRect.width &&\n      localTop >= 0 && localTop < elRect.height\n    ) {\n      return {\n        dateSpan: {\n          allDay: true,\n          range: { start: date, end: addDays(date, 1) },\n        },\n        dayEl: rootEl,\n        relativeRect: {\n          left: newOriginLeft,\n          top: newOriginTop,\n          right: elRect.width,\n          bottom: elRect.height,\n        },\n        layer: 1, // important when comparing with hits from other components\n      }\n    }\n\n    return null\n  }\n}\n","import {\n  EventSegUiInteractionState,\n  VNode,\n  DateComponent,\n  RefObject,\n  CssDimValue,\n  createElement,\n  PositionCache,\n  Ref,\n  memoize,\n  addDays,\n  RefMap,\n  setRef,\n  DateRange,\n  NowTimer,\n  DateMarker,\n  EventApi,\n  DateProfile,\n  Fragment,\n  createRef,\n} from '@fullcalendar/common'\nimport { TableSeg, splitSegsByRow, splitInteractionByRow } from './TableSeg'\nimport { TableRow } from './TableRow'\nimport { TableCellModel, MoreLinkArg } from './TableCell'\nimport { MorePopover } from './MorePopover'\nimport { MoreLinkAction } from './more-link'\n\nexport interface TableProps {\n  elRef?: Ref<HTMLDivElement>\n  dateProfile: DateProfile\n  cells: TableCellModel[][] // cells-BY-ROW\n  renderRowIntro?: () => VNode\n  colGroupNode: VNode\n  tableMinWidth: CssDimValue\n  expandRows: boolean\n  showWeekNumbers: boolean\n  clientWidth: number | null\n  clientHeight: number | null\n  businessHourSegs: TableSeg[]\n  bgEventSegs: TableSeg[]\n  fgEventSegs: TableSeg[]\n  dateSelectionSegs: TableSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  headerAlignElRef?: RefObject<HTMLElement>\n  forPrint: boolean\n}\n\ninterface TableState {\n  morePopoverState: MorePopoverState | null\n}\n\ninterface MorePopoverState extends MoreLinkArg {\n  currentFgEventSegs: TableSeg[]\n  fromRow: number\n  fromCol: number\n}\n\nexport class Table extends DateComponent<TableProps, TableState> {\n  private splitBusinessHourSegs = memoize(splitSegsByRow)\n  private splitBgEventSegs = memoize(splitSegsByRow)\n  private splitFgEventSegs = memoize(splitSegsByRow)\n  private splitDateSelectionSegs = memoize(splitSegsByRow)\n  private splitEventDrag = memoize(splitInteractionByRow)\n  private splitEventResize = memoize(splitInteractionByRow)\n  private buildBuildMoreLinkText = memoize(buildBuildMoreLinkText)\n  private rootEl: HTMLElement\n  private morePopoverRef = createRef<MorePopover>()\n  private rowRefs = new RefMap<TableRow>()\n  private rowPositions: PositionCache\n  private colPositions: PositionCache\n\n  state: TableState = {\n    morePopoverState: null,\n  }\n\n  render() {\n    let { props } = this\n    let { dateProfile, dayMaxEventRows, dayMaxEvents, expandRows } = props\n    let { morePopoverState } = this.state\n    let rowCnt = props.cells.length\n\n    let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt)\n    let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt)\n    let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt)\n    let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt)\n    let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt)\n    let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt)\n    let buildMoreLinkText = this.buildBuildMoreLinkText(this.context.options.moreLinkText)\n\n    let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true\n\n    // if rows can't expand to fill fixed height, can't do balanced-height event limit\n    // TODO: best place to normalize these options?\n    if (limitViaBalanced && !expandRows) {\n      limitViaBalanced = false\n      dayMaxEventRows = null\n      dayMaxEvents = null\n    }\n\n    let classNames = [\n      'fc-daygrid-body',\n      limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', // will all row heights be equal?\n      expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n    ]\n\n    return (\n      <div\n        className={classNames.join(' ')}\n        ref={this.handleRootEl}\n        style={{\n          // these props are important to give this wrapper correct dimensions for interactions\n          // TODO: if we set it here, can we avoid giving to inner tables?\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth,\n        }}\n      >\n        <NowTimer unit=\"day\">\n          {(nowDate: DateMarker, todayRange: DateRange) => (\n            <Fragment>\n              <table\n                className=\"fc-scrollgrid-sync-table\"\n                style={{\n                  width: props.clientWidth,\n                  minWidth: props.tableMinWidth,\n                  height: expandRows ? props.clientHeight : '',\n                }}\n              >\n                {props.colGroupNode}\n                <tbody>\n                  {props.cells.map((cells, row) => (\n                    <TableRow\n                      ref={this.rowRefs.createRef(row)}\n                      key={\n                        cells.length\n                          ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                          : row // in case there are no cells (like when resource view is loading)\n                      }\n                      showDayNumbers={rowCnt > 1}\n                      showWeekNumbers={props.showWeekNumbers}\n                      todayRange={todayRange}\n                      dateProfile={dateProfile}\n                      cells={cells}\n                      renderIntro={props.renderRowIntro}\n                      businessHourSegs={businessHourSegsByRow[row]}\n                      eventSelection={props.eventSelection}\n                      bgEventSegs={bgEventSegsByRow[row].filter(isSegAllDay) /* hack */}\n                      fgEventSegs={fgEventSegsByRow[row]}\n                      dateSelectionSegs={dateSelectionSegsByRow[row]}\n                      eventDrag={eventDragByRow[row]}\n                      eventResize={eventResizeByRow[row]}\n                      dayMaxEvents={dayMaxEvents}\n                      dayMaxEventRows={dayMaxEventRows}\n                      clientWidth={props.clientWidth}\n                      clientHeight={props.clientHeight}\n                      buildMoreLinkText={buildMoreLinkText}\n                      onMoreClick={(arg) => {\n                        this.handleMoreLinkClick({ ...arg, fromRow: row })\n                      }}\n                    />\n                  ))}\n                </tbody>\n              </table>\n              { // clear popover on event mod\n                (!props.forPrint && morePopoverState && morePopoverState.currentFgEventSegs === props.fgEventSegs) && (\n                  <MorePopover\n                    ref={this.morePopoverRef}\n                    date={morePopoverState.date}\n                    dateProfile={dateProfile}\n                    segs={morePopoverState.allSegs}\n                    alignmentEl={morePopoverState.dayEl}\n                    topAlignmentEl={rowCnt === 1 ? props.headerAlignElRef.current : null}\n                    onCloseClick={this.handleMorePopoverClose}\n                    selectedInstanceId={props.eventSelection}\n                    hiddenInstances={// yuck\n                      (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n                      (props.eventResize ? props.eventResize.affectedInstances : null) ||\n                      {}\n                    }\n                    todayRange={todayRange}\n                  />\n                )\n              }\n            </Fragment>\n          )}\n        </NowTimer>\n      </div>\n    )\n  }\n\n  handleRootEl = (rootEl: HTMLElement | null) => {\n    this.rootEl = rootEl\n    setRef(this.props.elRef, rootEl)\n  }\n\n  // TODO: bad names \"more link click\" versus \"more click\"\n  handleMoreLinkClick = (arg: MoreLinkArg & {fromRow: number, fromCol: number}) => {\n    let { context } = this\n    let { dateEnv } = context\n    let clickOption = context.options.moreLinkClick\n\n    function segForPublic(seg: TableSeg) {\n      let { def, instance, range } = seg.eventRange\n\n      return {\n        event: new EventApi(context, def, instance),\n        start: dateEnv.toDate(range.start),\n        end: dateEnv.toDate(range.end),\n        isStart: seg.isStart,\n        isEnd: seg.isEnd,\n      }\n    }\n\n    if (typeof clickOption === 'function') {\n      clickOption = clickOption({\n        date: dateEnv.toDate(arg.date),\n        allDay: true,\n        allSegs: arg.allSegs.map(segForPublic),\n        hiddenSegs: arg.hiddenSegs.map(segForPublic),\n        jsEvent: arg.ev,\n        view: context.viewApi,\n      }) as (MoreLinkAction | undefined) // hack to handle void\n    }\n\n    if (!clickOption || clickOption === 'popover') {\n      this.setState({\n        morePopoverState: {\n          ...arg,\n          currentFgEventSegs: this.props.fgEventSegs,\n          fromRow: arg.fromRow,\n          fromCol: arg.fromCol,\n        },\n      })\n    } else if (typeof clickOption === 'string') { // a view name\n      context.calendarApi.zoomTo(arg.date, clickOption)\n    }\n  }\n\n  handleMorePopoverClose = () => {\n    this.setState({\n      morePopoverState: null,\n    })\n  }\n\n  // Hit System\n  // ----------------------------------------------------------------------------------------------------\n\n  prepareHits() {\n    this.rowPositions = new PositionCache(\n      this.rootEl,\n      this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n      false,\n      true, // vertical\n    )\n\n    this.colPositions = new PositionCache(\n      this.rootEl,\n      this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n      true, // horizontal\n      false,\n    )\n  }\n\n  positionToHit(leftPosition, topPosition) {\n    let morePopover = this.morePopoverRef.current\n    let morePopoverHit = morePopover ? morePopover.positionToHit(leftPosition, topPosition, this.rootEl) : null\n    let { morePopoverState } = this.state\n\n    if (morePopoverHit) {\n      return {\n        row: morePopoverState.fromRow,\n        col: morePopoverState.fromCol,\n        ...morePopoverHit,\n      }\n    }\n\n    let { colPositions, rowPositions } = this\n    let col = colPositions.leftToIndex(leftPosition)\n    let row = rowPositions.topToIndex(topPosition)\n\n    if (row != null && col != null) {\n      return {\n        row,\n        col,\n        dateSpan: {\n          range: this.getCellRange(row, col),\n          allDay: true,\n        },\n        dayEl: this.getCellEl(row, col),\n        relativeRect: {\n          left: colPositions.lefts[col],\n          right: colPositions.rights[col],\n          top: rowPositions.tops[row],\n          bottom: rowPositions.bottoms[row],\n        },\n      }\n    }\n\n    return null\n  }\n\n  private getCellEl(row, col) {\n    return this.rowRefs.currentMap[row].getCellEls()[col] // TODO: not optimal\n  }\n\n  private getCellRange(row, col) {\n    let start = this.props.cells[row][col].date\n    let end = addDays(start, 1)\n    return { start, end }\n  }\n}\n\nfunction buildBuildMoreLinkText(moreLinkTextInput): (num: number) => string {\n  if (typeof moreLinkTextInput === 'function') {\n    return moreLinkTextInput\n  }\n\n  return (num) => `+${num} ${moreLinkTextInput}`\n}\n\nfunction isSegAllDay(seg: TableSeg) {\n  return seg.eventRange.def.allDay\n}\n","import { DayTableModel, DateRange, Slicer } from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport class DayTableSlicer extends Slicer<TableSeg, [DayTableModel]> {\n  forceDayIfListItem = true\n\n  sliceRange(dateRange: DateRange, dayTableModel: DayTableModel): TableSeg[] {\n    return dayTableModel.sliceRange(dateRange)\n  }\n}\n","import {\n  createElement, createRef, VNode,\n  EventStore,\n  EventUiHash,\n  DateSpan,\n  EventInteractionState,\n  DayTableModel,\n  Duration,\n  DateComponent,\n  ViewContext,\n  RefObject,\n  CssDimValue,\n  Hit,\n  DateProfile,\n} from '@fullcalendar/common'\nimport { Table } from './Table'\nimport { DayTableSlicer } from './DayTableSlicer'\n\nexport interface DayTableProps {\n  dateProfile: DateProfile,\n  dayTableModel: DayTableModel\n  nextDayThreshold: Duration\n  businessHours: EventStore\n  eventStore: EventStore\n  eventUiBases: EventUiHash\n  dateSelection: DateSpan | null\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  colGroupNode: VNode\n  tableMinWidth: CssDimValue\n  renderRowIntro?: () => VNode\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  expandRows: boolean\n  showWeekNumbers: boolean\n  headerAlignElRef?: RefObject<HTMLElement> // for more popover alignment\n  clientWidth: number | null\n  clientHeight: number | null\n  forPrint: boolean\n}\n\nexport class DayTable extends DateComponent<DayTableProps, ViewContext> {\n  private slicer = new DayTableSlicer()\n  private tableRef = createRef<Table>()\n\n  render() {\n    let { props, context } = this\n\n    return (\n      <Table\n        ref={this.tableRef}\n        elRef={this.handleRootEl}\n        {...this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel)}\n        dateProfile={props.dateProfile}\n        cells={props.dayTableModel.cells}\n        colGroupNode={props.colGroupNode}\n        tableMinWidth={props.tableMinWidth}\n        renderRowIntro={props.renderRowIntro}\n        dayMaxEvents={props.dayMaxEvents}\n        dayMaxEventRows={props.dayMaxEventRows}\n        showWeekNumbers={props.showWeekNumbers}\n        expandRows={props.expandRows}\n        headerAlignElRef={props.headerAlignElRef}\n        clientWidth={props.clientWidth}\n        clientHeight={props.clientHeight}\n        forPrint={props.forPrint}\n      />\n    )\n  }\n\n  handleRootEl = (rootEl: HTMLDivElement | null) => {\n    if (rootEl) {\n      this.context.registerInteractiveComponent(this, { el: rootEl })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n  prepareHits() {\n    this.tableRef.current.prepareHits()\n  }\n\n  queryHit(positionLeft: number, positionTop: number): Hit {\n    let rawHit = this.tableRef.current.positionToHit(positionLeft, positionTop)\n\n    if (rawHit) {\n      return {\n        component: this,\n        dateSpan: rawHit.dateSpan,\n        dayEl: rawHit.dayEl,\n        rect: {\n          left: rawHit.relativeRect.left,\n          right: rawHit.relativeRect.right,\n          top: rawHit.relativeRect.top,\n          bottom: rawHit.relativeRect.bottom,\n        },\n        layer: 0,\n      }\n    }\n\n    return null\n  }\n}\n","import {\n  createElement, createRef,\n  DayHeader,\n  DateProfileGenerator,\n  DateProfile,\n  memoize,\n  DaySeriesModel,\n  DayTableModel,\n  ChunkContentCallbackArgs,\n} from '@fullcalendar/common'\nimport { TableView } from './TableView'\nimport { DayTable } from './DayTable'\n\nexport class DayTableView extends TableView {\n  private buildDayTableModel = memoize(buildDayTableModel)\n  private headerRef = createRef<DayHeader>()\n  private tableRef = createRef<DayTable>()\n\n  render() {\n    let { options, dateProfileGenerator } = this.context\n    let { props } = this\n    let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator)\n\n    let headerContent = options.dayHeaders && (\n      <DayHeader\n        ref={this.headerRef}\n        dateProfile={props.dateProfile}\n        dates={dayTableModel.headerDates}\n        datesRepDistinctDays={dayTableModel.rowCnt === 1}\n      />\n    )\n\n    let bodyContent = (contentArg: ChunkContentCallbackArgs) => (\n      <DayTable\n        ref={this.tableRef}\n        dateProfile={props.dateProfile}\n        dayTableModel={dayTableModel}\n        businessHours={props.businessHours}\n        dateSelection={props.dateSelection}\n        eventStore={props.eventStore}\n        eventUiBases={props.eventUiBases}\n        eventSelection={props.eventSelection}\n        eventDrag={props.eventDrag}\n        eventResize={props.eventResize}\n        nextDayThreshold={options.nextDayThreshold}\n        colGroupNode={contentArg.tableColGroupNode}\n        tableMinWidth={contentArg.tableMinWidth}\n        dayMaxEvents={options.dayMaxEvents}\n        dayMaxEventRows={options.dayMaxEventRows}\n        showWeekNumbers={options.weekNumbers}\n        expandRows={!props.isHeightAuto}\n        headerAlignElRef={this.headerElRef}\n        clientWidth={contentArg.clientWidth}\n        clientHeight={contentArg.clientHeight}\n        forPrint={props.forPrint}\n      />\n    )\n\n    return options.dayMinWidth\n      ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n      : this.renderSimpleLayout(headerContent, bodyContent)\n  }\n}\n\nexport function buildDayTableModel(dateProfile: DateProfile, dateProfileGenerator: DateProfileGenerator) {\n  let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator)\n\n  return new DayTableModel(\n    daySeries,\n    /year|month|week/.test(dateProfile.currentRangeUnit),\n  )\n}\n","import {\n  DateProfileGenerator,\n  addWeeks, diffWeeks,\n  DateRange,\n} from '@fullcalendar/common'\n\nexport class TableDateProfileGenerator extends DateProfileGenerator {\n  // Computes the date range that will be rendered.\n  buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay): DateRange {\n    let { dateEnv } = this.props\n    let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay)\n    let start = renderRange.start\n    let end = renderRange.end\n    let endOfWeek\n\n    // year and month views should be aligned with weeks. this is already done for week\n    if (/^(year|month)$/.test(currentRangeUnit)) {\n      start = dateEnv.startOfWeek(start)\n\n      // make end-of-week if not already\n      endOfWeek = dateEnv.startOfWeek(end)\n      if (endOfWeek.valueOf() !== end.valueOf()) {\n        end = addWeeks(endOfWeek, 1)\n      }\n    }\n\n    // ensure 6 weeks\n    if (\n      this.props.monthMode &&\n      this.props.fixedWeekCount\n    ) {\n      let rowCnt = Math.ceil( // could be partial weeks due to hiddenDays\n        diffWeeks(start, end),\n      )\n      end = addWeeks(end, 6 - rowCnt)\n    }\n\n    return { start, end }\n  }\n}\n","import { identity, Identity, ClassNamesGenerator, CustomContentGenerator, DidMountHandler, WillUnmountHandler } from '@fullcalendar/common'\n\n// public\nimport {\n  MoreLinkContentArg,\n  MoreLinkMountArg,\n  MoreLinkAction,\n} from './api-type-deps'\n\nexport const OPTION_REFINERS = {\n  moreLinkClick: identity as Identity<MoreLinkAction>,\n  moreLinkClassNames: identity as Identity<ClassNamesGenerator<MoreLinkContentArg>>,\n  moreLinkContent: identity as Identity<CustomContentGenerator<MoreLinkContentArg>>,\n  moreLinkDidMount: identity as Identity<DidMountHandler<MoreLinkMountArg>>,\n  moreLinkWillUnmount: identity as Identity<WillUnmountHandler<MoreLinkMountArg>>,\n}\n","import { createPlugin } from '@fullcalendar/common'\nimport { DayTableView } from './DayTableView'\nimport { TableDateProfileGenerator } from './TableDateProfileGenerator'\nimport { OPTION_REFINERS } from './options'\nimport './options-declare'\nimport './main.css'\n\nexport * from './api-type-deps'\nexport { DayTable } from './DayTable'\nexport { DayTableSlicer } from './DayTableSlicer'\nexport { Table } from './Table'\nexport { TableSeg } from './TableSeg'\nexport { TableCellModel } from './TableCell'\nexport { TableView } from './TableView'\nexport { buildDayTableModel } from './DayTableView'\nexport { DayTableView as DayGridView } // export as old name!\n\nexport default createPlugin({\n  initialView: 'dayGridMonth',\n  optionRefiners: OPTION_REFINERS,\n  views: {\n\n    dayGrid: {\n      component: DayTableView,\n      dateProfileGeneratorClass: TableDateProfileGenerator,\n    },\n\n    dayGridDay: {\n      type: 'dayGrid',\n      duration: { days: 1 },\n    },\n\n    dayGridWeek: {\n      type: 'dayGrid',\n      duration: { weeks: 1 },\n    },\n\n    dayGridMonth: {\n      type: 'dayGrid',\n      duration: { months: 1 },\n      monthMode: true,\n      fixedWeekCount: true,\n    },\n\n  },\n})\n"],"names":[],"mappings":"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"}