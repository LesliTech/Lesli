/*

Lesli

Copyright (c) 2020, Lesli Technologies, S. A.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.

LesliCSS - SCSS Utilities for websites, apps and web applications

Powered by https://www.lesli.tech
Building a better future, one line of code at a time.

@contact  <hello@lesli.tech>
@website  <https://lesli.tech>
@license  GPLv3 http://www.gnu.org/licenses/gpl-3.0.en.html

// · ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~
// · 

*/


// · 
@import "true";
@import "../../src/functions/colors.scss";


// · 
@function lesli-css-color($pallete, $variant: 500) {
    @return lesli-css-color-builder($pallete, $variant, (
        lesli: (
            sea: #2F478D,
            navy: #112A62,
            easy: #7E9BF1,
            brand: #214FBD,
            faded: #EBF1FF,
            ocean: #172347,
            midsky: #edf6ff
        )
    ));
}


// · 
@include describe('@function lesli-css-color($pallete, $variant: 500)') {

    @include it('should return the color for lesli sea') {
    @include assert-equal(lesli-css-color(lesli, sea), #2F478D); 
    }

    @include it('should return the color for lesli sea') {
    @include assert-equal(lesli-css-color(lesli, navy), #112A62); 
    }

    @include it('should return the color for lesli sea') {
    @include assert-equal(lesli-css-color(lesli, easy), #7E9BF1); 
    }

    @include it('should return the color for lesli sea') {
    @include assert-equal(lesli-css-color(lesli, brand), #214FBD); 
    }

    @include it('should return the color for lesli sea') {
    @include assert-equal(lesli-css-color(lesli, faded), #EBF1FF); 
    }

    @include it('should return the color for lesli sea') {
    @include assert-equal(lesli-css-color(lesli, ocean), #172347); 
    }

    @include it('should return the color for lesli sea') {
    @include assert-equal(lesli-css-color(lesli, midsky), #edf6ff); 
    }

}


// · 
@include describe('@function lesli-css-color-builder($pallete, $variant: 500)') {

    @include it('should return the color for blue default') {
    @include assert-equal(lesli-css-color-builder(blue), #3689e6);
    }

    @include it('should return the color for blue 100') {
    @include assert-equal(lesli-css-color-builder(blue, 100), #8cd5ff);
    }

    @include it('should return the color for blue 300') {
    @include assert-equal(lesli-css-color-builder(blue, 300), #64baff);
    }

    @include it('should return the color for blue 500') {
    @include assert-equal(lesli-css-color-builder(blue, 500), #3689e6);
    }

    @include it('should return the color for blue 700') {
    @include assert-equal(lesli-css-color-builder(blue, 700), #0d52bf);
    }

    @include it('should return the color for blue 900') {
    @include assert-equal(lesli-css-color-builder(blue, 900), #002e99); 
    }

}
