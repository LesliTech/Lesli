/**
Lesli

Copyright (c) 2020, Lesli Technologies, S. A.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.

LesliCSS - SCSS Utilities for websites, apps and web applications

Powered by https://www.lesli.tech
Building a better future, one line of code at a time.

@contact  <hello@lesli.tech>
@website  <https://lesli.tech>
@license  GPLv3 http://www.gnu.org/licenses/gpl-3.0.en.html

// · ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~
// · 
*/


// · Flexbox container 
// · ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~
@mixin lesli-css-flex($direction:row, $align: center, $justify: space-between) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}


// · Center with flexbox 
// · ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~
@mixin lesli-css-flex-center($direction) {
    display: flex;
    align-items: center;
    justify-content: center;

    @if ($direction == 'vertical') {
        flex-direction: column;
        height: 100%;
    }

}


@mixin lesli-css-flex-center-vertical($height:auto) {
    @include lesli-css-flex-center('vertical');
    flex-grow: 1;
    height: $height;
}


// · Fluid grid with flexbox 
// · ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~
@mixin lesli-css-flex-columns($column-width: 150px, $gap:false) {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;

    & > * {
        flex-basis: $column-width;
        max-width: $column-width;
        @if ($gap) {
            margin: 0 $gap ($gap * 2);
        }
    }

}
