=begin
Copyright (c) 2022, all rights reserved.

All the information provided by this platform is protected by international laws related  to
industrial property, intellectual property, copyright and relative international laws.
All intellectual or industrial property rights of the code, texts, trade mark, design,
pictures and any other information belongs to the owner of this platform.

Without the written permission of the owner, any replication, modification,
transmission, publication is strictly forbidden.

For more information read the license file including with this software.

// · ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~
// ·
=end

class MfaService

    def initialize resource
        @resource = resource
    end

    def has_mfa_enabled?
        return LC::Response.service(true) if @resource.mfa_enabled || !@resource.mfa_method.nil?
        
        LC::Response.service(false)
    end

    def send_otp_via_email request
        otp = AccessCodeService.create_access_code(@resource, "otp")

        if otp.successful?
            # Get the raw token generated by Devise
            raw = otp.payload[:raw]

            # Create logs that an OTP was created successfully
            @resource.logs.create({
                title: "otp_mfa_creation_successful",
                description: "user_agent: #{request.user_agent}, user_remote: #{request.remote_ip}"
            })

            # Send E-mail with the OTP
            # UserMailer.with(user: @resource, token: raw).otp_instructions.deliver_now

            return LC::Response.service(true)
        else
            return LC::Response.service(false, otp.error)
        end
    end
end
