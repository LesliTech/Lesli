<%#

Lesli

Copyright (c) 2023, Lesli Technologies, S. A.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see http://www.gnu.org/licenses/.

Lesli · Ruby on Rails SaaS Development Framework.

Made with ♥ by https://www.lesli.tech
Building a better future, one line of code at a time.

@contact  hello@lesli.tech
@website  https://www.lesli.tech
@license  GPLv3 http://www.gnu.org/licenses/gpl-3.0.en.html

// · ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~
// · 
%>

<%
hour = Date2.new.date.get.hour  # Returns the hour (0–23) based on the app's timezone
welcome_options = ["Good morning", "Good afternoon", "Good evening"]
welcome_text = ""

if hour < 12
  welcome_text = welcome_options.first
elsif hour < 18
  welcome_text = welcome_options.second
else
  welcome_text = welcome_options.third
end
%>

<%= render(LesliView::Layout::Container.new("dashboards-show")) do %>

    <section class="lesli-element-header is-flex mt-6">
        <div class="lesli-element-header-title">
            <h1 class="subtitle is-size-3 mb-0"><%= welcome_text %>, <%= current_user.full_name %>.</h1>
            <p class=""><%= Date2.new.date_words %>.</p>
        </div>
    </section>

    <%= render(LesliView::Elements::Empty.new(text:"Empty dashboard")) %>



<% data = [5,15,25,20,35,10,40,30,20,10,10,20,30,15,25,20,35,10,40,30,20,10,10,20,30,15,25,20,35,10,40,30,20,10,10,20,30,15,25,20,35,10,40,30,20,10,10,20,30] %> <!-- Dynamic data set -->
<% max_y = data.max.to_f %> <!-- Find max Y value for scaling -->
<% chart_width = 100 %>
<% chart_height = 50 %>
<% padding = 10 %> <!-- Padding for axes -->
<% num_points = data.size %>
<% x_step = (chart_width - (2 * padding)) / (num_points - 1).to_f %>

<svg viewBox="0 0 <%= chart_width %> <%= chart_height %>" preserveAspectRatio="none" 
     xmlns="http://www.w3.org/2000/svg" style="width: 100%; height: auto;">
  
  <!-- Axes -->
  <line x1="<%= padding %>" y1="<%= chart_height - padding %>" x2="<%= chart_width - padding %>" 
        y2="<%= chart_height - padding %>" stroke="black" stroke-width="0.5"/>
  <line x1="<%= padding %>" y1="<%= chart_height - padding %>" x2="<%= padding %>" 
        y2="<%= padding %>" stroke="black" stroke-width="0.5"/>

  <!-- Data points and lines -->
  <% data.each_with_index do |y, i| %>
    <% x = padding + (i * x_step) %>
    <% y_pos = (chart_height - padding) - ((y / max_y) * (chart_height - (2 * padding))) %>

    <% if i > 0 %>
      <% prev_x = padding + ((i - 1) * x_step) %>
      <% prev_y_pos = (chart_height - padding) - ((data[i - 1] / max_y) * (chart_height - (2 * padding))) %>
      <line x1="<%= prev_x %>" y1="<%= prev_y_pos %>" x2="<%= x %>" y2="<%= y_pos %>" 
            stroke="blue" stroke-width="0.5"/>
    <% end %>

    <circle cx="<%= x %>" cy="<%= y_pos %>" r="1" fill="blue"/>
  <% end %>
</svg>



<% end %>
