<%
=begin

Lesli

Copyright (c) 2023, Lesli Technologies, S. A.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see http://www.gnu.org/licenses/.

Lesli · Ruby on Rails SaaS development platform.

Made with ♥ by https://www.lesli.tech
Building a better future, one line of code at a time.

@contact  hello@lesli.tech
@website  https://www.lesli.tech
@license  GPLv3 http://www.gnu.org/licenses/gpl-3.0.en.html

// · ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~
// · 
=end
%>

<%# check if custom header partial exists in the builder engine %>
<% custom_header_path = "layouts/#{lesli_engine.dig(:code)}/partials/application-header" %>

<%# validate the path to be sure the partial exists when trying to render it %>
<% custom_header_exists = lookup_context.exists?(custom_header_path, nil, true) %>

<%# render custom header from builder engine if exists %>
<%= render( partial: custom_header_path) if custom_header_exists %>

<%# if custom header does not exists, use the main from core %>
<% unless custom_header_exists %>
    <lesli-application-header 
        <%= "show-bell" if defined?(CloudBell) %>
        <%= "show-announcements" if defined?(CloudBell) %>
        <%= "show-focus" if defined?(CloudFocus) %>
        <%= "show-tickets" if defined?(CloudHelp) %>
        :show-engines="true">

        <%# language selector %>
        <% if I18n.available_locales.length > 1 && params[:controller] == 'profiles' %>
            <div class="dropdown is-hoverable header-language-selector">
                <div class="dropdown-trigger">
                    <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                        <span class="icon has-text-grey-light">
                            <%= flag_icon(language_flag(I18n.locale)) %>
                        </span>
                    </button>
                </div>
                <div class="dropdown-menu" id="dropdown-menu" role="menu">
                    <div class="dropdown-content">
                        <% I18n.available_locales.each do |locale| %>
                            <% next if locale == I18n.locale %>
                            <%= link_to language_url(locale), { :class => "dropdown-item" } do %>
                                <span class="icon has-text-grey-light">
                                    <%= flag_icon(language_flag(locale)) %>
                                </span>
                                <span><%= language_name(locale) %></span>
                            <% end %>
                        <% end %>
                    </div>
                </div>
            </div>
        <% end %>
    </lesli-application-header >
<% end %>
